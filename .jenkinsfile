pipeline{
    agent {
        label 'ubuntu'
    }
    environment { 
        COMMIT_HASH = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
        REMOTE_SERVER = "10.24.169.112"
        DOCKER_REGISTRY = "trankimtep"
    }
    stages {
        stage ("docker build"){
            steps{
                script{
                        sh "docker build -t $DOCKER_REGISTRY/$env.JOB_NAME:$COMMIT_HASH ."         
                    
                }                
            }
        }
        stage ("docker push"){
            steps{
                withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
        	        sh ('docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD')
                    sh "docker push $DOCKER_REGISTRY/$env.JOB_NAME:$COMMIT_HASH"
                }
            }
        }

        stage ("remove running container") {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'ssh-key-to-DBserver', keyFileVariable: 'SSH_PRIVATE_KEY', usernameVariable: 'USERNAME')]) {
                        sh "ssh -o StrictHostKeyChecking=no -i \${SSH_PRIVATE_KEY} ${USERNAME}@${REMOTE_SERVER} docker stop ${env.JOB_NAME} || true"
                    }
                }
            }
        }

        stage("docker run ") {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'ssh-key-to-DBserver', keyFileVariable: 'SSH_PRIVATE_KEY', usernameVariable: 'USERNAME')]) {
                        sh "ssh -o StrictHostKeyChecking=no -i \${SSH_PRIVATE_KEY} ${USERNAME}@${REMOTE_SERVER} docker run --rm --name ${env.JOB_NAME} -d -p 8000:8000 ${DOCKER_REGISTRY}/${env.JOB_NAME}:${COMMIT_HASH}"
                    }
                }
            }
        }
    }
}


// def COMMIT_HASH
// def REMOTE_SERVER
// def SSH_CREDENTIALS
// def DOCKER_REGISTRY

// node{
//     COMMIT_HASH = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
//     REMOTE_SERVER = "10.24.169.112"
//     SSH_CREDENTIALS = credentials('ssh-key-to-DBserver')
//     DOCKER_REGISTRY = "trankimtep"
//     stage ("docker build"){
//         sh("docker build -t ${DOCKER_REGISTRY}/${env.JOB_NAME}:${COMMIT_HASH} .")
//     }
//     stage("docker push"){
//         withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
//             sh ('docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD')
//             sh "docker push ${DOCKER_REGISTRY}/${env.JOB_NAME}:${COMMIT_HASH}"
//         }
//     }
//     stage("docker run"){
//         withCredentials([sshUserPrivateKey(credentialsId: 'ssh-key-to-DBserver', keyFileVariable: 'SSH_PRIVATE_KEY', usernameVariable: 'userName')]) {
//             sh "ssh -o StrictHostKeyChecking=no -i \$SSH_PRIVATE_KEY ${userName}@${REMOTE_SERVER} docker stop ${env.JOB_NAME} || true"
//             sh "ssh -o StrictHostKeyChecking=no -i \$SSH_PRIVATE_KEY ${userName}@${REMOTE_SERVER} docker run --rm --name ${env.JOB_NAME} -d -p 8000:8000 ${DOCKER_REGISTRY}/${env.JOB_NAME}:${COMMIT_HASH}"
//         } 
//     }
// }